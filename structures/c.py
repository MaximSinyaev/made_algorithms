"""
–î–ª—è –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–∑—ä—è—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∫–æ–º–∞–Ω–¥—ã. –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–Ω—É –∫–æ–º–∞–Ω–¥—É. –ö–æ–º–∞–Ω–¥–∞ ‚Äî —ç—Ç–æ –ª–∏–±–æ "+ N",
–ª–∏–±–æ "-". –ö–æ–º–∞–Ω–¥–∞ "+ N" –æ–∑–Ω–∞—á–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å —á–∏—Å–ª–∞ ùëÅ, –ø–æ –º–æ–¥—É–ª—é –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—â–µ–≥–æ 109. –ö–æ–º–∞–Ω–¥–∞ "-" –æ–∑–Ω–∞—á–∞–µ—Ç
–∏–∑—ä—è—Ç–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏.

–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥ ‚Äî ùëö (1‚©Ωùëö‚©Ω105). –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —Å—Ç—Ä–æ–∫–∞—Ö —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –∫–æ–º–∞–Ω–¥—ã, –ø–æ –æ–¥–Ω–æ–π –≤ –∫–∞–∂–¥–æ–π
—Å—Ç—Ä–æ–∫–µ.

–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ —É–¥–∞–ª—è—é—Ç—Å—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏, –ø–æ –æ–¥–Ω–æ–º—É –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏–∑—ä—è—Ç–∏–π –∏–∑ –ø—É—Å—Ç–æ–π –æ—á–µ—Ä–µ–¥–∏ –Ω–µ
–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.
"""

import sys


class Queue:
    def __init__(self):
        self.size = 0
        self.begin = 0
        self.max_size = 2
        self.data = [0] * self.max_size

    def append(self, value):
        if self.size == self.max_size:
            self.enlarge_capacity()
        self.data[(self.size + self.begin) % self.max_size] = value
        self.size += 1

    def left_pop(self):
        value = self.data[self.begin]
        self.data[self.begin] = 0
        self.begin = (self.begin + 1) % self.max_size
        self.size -= 1
        return value

    def enlarge_capacity(self):
        new_data = [0] * self.max_size * 2
        for i in range(self.max_size):
            new_data[i] = self.data[i]
        del self.data
        self.data = new_data
        self.max_size *= 2

    def __repr__(self):
        return str(self.data)

if __name__ == '__main__':
    raw_input = sys.stdin.read().splitlines()
    n = int(raw_input[0])
    queue = Queue()
    for i in range(n):
        # print(queue)
        op = raw_input[1 + i].split()
        if op[0] == '+':
            queue.append(int(op[1]))
        else:
            print(queue.left_pop())
